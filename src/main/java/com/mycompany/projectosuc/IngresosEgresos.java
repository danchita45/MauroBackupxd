/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projectosuc;

import EDD.ArchivoSuc;
import EDD.IngresoEgreso;
import EDD.ListaDoblementeLigada;
import EDD.NodoLista;
import EDD.Sucursales;
import java.util.LinkedList;
import java.util.StringTokenizer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Danchita45
 */
public class IngresosEgresos extends javax.swing.JFrame {

    /**
     * Creates new form IngresosEgresos
     */
    public IngresosEgresos() {
        initComponents();
        
        double Balancep=0.0;
        double Balancen=0.0;
        EDD.ArchivoSuc archivoI = new ArchivoSuc("Ingresos.txt");
        EDD.ArchivoSuc archivoE = new ArchivoSuc("Egresos.txt");
        LinkedList<String> lineasI = archivoI.obtenerTexto();
        LinkedList<String> lineasE = archivoE.obtenerTexto();
        DefaultTableModel dt = new DefaultTableModel(new String[]{"No.Ingreso", "Sucursal", "Monto", "Fecha"}, lineasI.size());
        DefaultTableModel dtE = new DefaultTableModel(new String[]{"No.Ingreso", "Sucursal", "Monto", "Fecha"}, lineasE.size());
        TablaIngresos.setModel(dt);
        TablaEgresos.setModel(dtE);
        TableModel modeldata = TablaIngresos.getModel();
        TableModel modeldataE = TablaEgresos.getModel();
        if (lineasI != null) {

            //creamos un nuevo nodo lista y una sucursal donde Transformaremos los datos en string a obj
            for (int j = 0; j < lineasI.size(); j++) {
                NodoLista nodoI = new NodoLista();
                IngresoEgreso I = new IngresoEgreso();
                String lineaI = lineasI.get(j);
                StringTokenizer tokensI = new StringTokenizer(lineaI, ";");
                I.setMonto(Double.parseDouble(tokensI.nextToken()));
                I.setFecha(tokensI.nextToken());
                I.setDescuento(Double.parseDouble(tokensI.nextToken()));
                I.setSucursal(Integer.parseInt(tokensI.nextToken()));
                I.setEI(1);
                modeldata.setValueAt(j, j, 0);
                modeldata.setValueAt(I.getSucursal(), j, 1);
                modeldata.setValueAt(I.getMonto(), j, 2);
                modeldata.setValueAt(I.getFecha(), j, 3);
                if(I.getDescuento()!=0.0){
                    double descuentopercent = I.getDescuento() /100;
                    Balancep += I.getMonto() *descuentopercent ;
                }else{
                   Balancep += I.getMonto() ;
                }
            }
        }
        if (lineasE != null) {
            //creamos un nuevo nodo lista y una sucursal donde Transformaremos los datos en string a obj
            for (int j = 0; j < lineasE.size(); j++) {
                NodoLista nodoI = new NodoLista();
                IngresoEgreso I = new IngresoEgreso();
                String lineaE = lineasE.get(j);
                StringTokenizer tokensE = new StringTokenizer(lineaE, ";");
                I.setMonto(Double.parseDouble(tokensE.nextToken()));
                I.setFecha(tokensE.nextToken());
                I.setDescuento(Double.parseDouble(tokensE.nextToken()));
                
                I.setSucursal(Integer.parseInt(tokensE.nextToken()));
                
                I.setEI(1);
                modeldataE.setValueAt(j, j, 0);
                modeldataE.setValueAt(I.getSucursal(), j, 1);
                modeldataE.setValueAt(I.getMonto(), j, 2);
                modeldataE.setValueAt(I.getFecha(), j, 3);
                if(I.getDescuento()!=0.0){
                    Balancen += (I.getMonto()* (I.getDescuento()/100));
                }else{
                   Balancen += (I.getMonto());
                }
            }
        }
        double BalanceTotal = Balancep - Balancen;
        balanceTotal.setText(String.valueOf(BalanceTotal));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEgresos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaIngresos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        balanceTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaEgresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.Egreso", "Sucursal", "Monto", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaEgresos);
        if (TablaEgresos.getColumnModel().getColumnCount() > 0) {
            TablaEgresos.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 79, -1, 230));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Egresos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 29, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setText("Ingresos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 29, -1, -1));

        TablaIngresos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.Egreso", "Sucursal", "Monto", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaIngresos);
        if (TablaIngresos.getColumnModel().getColumnCount() > 0) {
            TablaIngresos.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 79, -1, 230));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(957, 0, 34, -1));

        jLabel2.setText("Balance Total: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 110, 30));
        getContentPane().add(balanceTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 170, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MenuPrinc m = new MenuPrinc();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresosEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresosEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresosEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresosEgresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngresosEgresos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaEgresos;
    private javax.swing.JTable TablaIngresos;
    private javax.swing.JLabel balanceTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
